# -*- coding: utf-8 -*-
"""CV_MiniPROJECT.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-Y7oCo-Wc81lPeKeZdoDJ2nJqrSDKVa0
"""

from google.colab import drive

drive.mount('/content/drive')

!nvidia-smi

import os
HOME = os.getcwd()
print(HOME)

!pip install ultralytics==8.0.20

from IPython import display
display.clear_output()

import ultralytics
ultralytics.checks()

from ultralytics import YOLO

from IPython.display import display, Image

#!mkdir {HOME}/datasets
#%cd {HOME}/datasets

#!pip install roboflow --quiet

#!pip install roboflow

#from roboflow import Roboflow
#rf = Roboflow(api_key="p50YCjaRTnnXQ5IZJHHg")
#project = rf.workspace("cvproject-soeqs").project("helmet-detection-wtpu9")
#dataset = project.version(8).download("yolov8")

!yolo task=detect mode=train model=/content/yolov8m.pt data=/content/drive/MyDrive/YOLO_v8-CUSTOM/custom_data.yaml epochs=25 imgsz=640 plots=True

!ls {HOME}/runs/detect/train/

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}

!yolo task=detect mode=val model={HOME}/runs/detect/train/weights/best.pt data={dataset.location}/data.yaml

# Commented out IPython magic to ensure Python compatibility.
# %cd {HOME}
!yolo task=detect mode=predict model={HOME}/runs/detect/train/weights/best.pt conf=0.25 source={dataset.location}/test/images save=True

import glob
from IPython.display import Image, display

for image_path in glob.glob(f'{HOME}/runs/detect/predict3/*.jpg')[:3]:
      display(Image(filename=image_path, width=600))
      print("\n")

project.version(dataset.version).deploy(model_type="yolov8", model_path=f"{HOME}/runs/detect/train/")

from roboflow import Roboflow
rf = Roboflow(api_key="p50YCjaRTnnXQ5IZJHHg")
project = rf.workspace().project("helmet-detection-wtpu9")
model = project.version(8).model

# infer on a local image
#print(model.predict("your_image.jpg", confidence=40, overlap=30).json())

# visualize your prediction
# model.predict("your_image.jpg", confidence=40, overlap=30).save("prediction.jpg")

# infer on an image hosted elsewhere
# print(model.predict("URL_OF_YOUR_IMAGE", hosted=True, confidence=40, overlap=30).json())

from roboflow import Roboflow
rf = Roboflow(api_key="p50YCjaRTnnXQ5IZJHHg")
project = rf.workspace().project("helmet-detection-wtpu9")
model = project.version(8).model

# infer on a local ima

print(model.predict("/content/004_mp4-3_jpg.rf.18e205f7a879b527568857f01d793d13.jpg", confidence=40, overlap=30).json())

# visualize your prediction
# model.predict("your_image.jpg", confidence=40, overlap=30).save("prediction.jpg")

# infer on an image hosted elsewhere
# print(model.predict("URL_OF_YOUR_IMAGE", hosted=True, confidence=40, overlap=30).json())
